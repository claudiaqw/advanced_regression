ggcorr(data.df[,numeric_columns], label = T)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
data.df %>%
ggplot(aes(x=Confirmed, y=Deaths)) +
geom_point()
data.df %>%
ggplot(aes(x=Date, y=Confirmed)) +
geom_line(color='#00AFBB', size = 2)
data.df %>%
ggplot(aes(x=Date, y=Deaths)) +
geom_line(color='#00AFBB', size = 1)
library(corrplot)
ggcorr(data.df[,numeric_columns], label = T)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
install.packages("GGally")
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(corrplot)
ggcorr(data.df[,numeric_columns], label = T)
barplot(data.df$Mortality_Rate), col="darkblue")
barplot(data.df$Mortality_Rate, col="darkblue")
barplot(data.df$Deaths, col="darkblue")
barplot(data.df$Mortality_Rate, col="darkblue")
View(data.df)
View(data.df)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
install.packages("caret")
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
set.seed(42)
trainIndex <- createDataPartition(data.df$Mortality_Rate, p = .7,
list = FALSE,
times = 1)
training <- data.df[ trainIndex,]
testing <- data.df[-trainIndex,]
fit.lm <- lm(Mortality_Rate ~ .- UID -ISO3 -Last_Update , data=data.df)
fit.lm <- lm(Mortality_Rate ~ . - UID - ISO3 - Last_Update , data=data.df)
summary(data.df)
fit.lm <- lm(Mortality_Rate ~ . - UID - ISO3 - Last_Update -Date, data=data.df)
data.df$Hospitalization_Rate
data.df$Testing_Rate
set.seed(42)
covid.data <- data %>%
sselect(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, Case_Fatality_Ratio, Testing_Rate, Mortality_Rate)
set.seed(42)
covid.data <- data %>%
select(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, Case_Fatality_Ratio, Testing_Rate, Mortality_Rate)
trainIndex <- createDataPartition(covid.data$Mortality_Rate, p = .7,
list = FALSE,
times = 1)
training <- covid.data[ trainIndex,]
testing <- covid.data[-trainIndex,]
fit.lm <- lm(Mortality_Rate ~ ., data=covid.data)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm <- lm(Mortality_Rate ~ . - Deaths, data=covid.data)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm <- lm(Mortality_Rate ~ . - Deaths - Mortality_Rate, data=covid.data)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm <- lm(Mortality_Rate ~ . - Deaths, data=covid.data)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm.log <- lm(log(Mortality_Rate+1) ~ . - Deaths, data=covid.data)
summary(fit.lm.log)
par(mfrow=c(2,2))
plot(fit.lm.log)
fit.glm <- glm(Mortality_Rate ~ . - Deaths, family = binomial(link = "cloglog"))
fit.glm <- glm(Mortality_Rate ~ . - Deaths, family = binomial(link = "cloglog"), data=covid.data)
fit.glm <- glm(Mortality_Rate ~ . - Deaths, family = 'poisson, data=covid.data)
summary(fit.glm)
fit.glm <- glm(Mortality_Rate ~ . - Deaths, family = 'poisson', data=covid.data)
summary(fit.glm)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
data <- read.csv(file = 'data/covid_data_us.csv')
data <- read.csv(file = 'data/covid_data_us.csv')
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
summary(data)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
View(data)
View(data)
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
summary(data)
colSums(is.na(data))
data.columns
colnames(data)
data$Mortality_Rate
View(data)
View(data)
colSums(is.na(data))
setwd("C:/Users/tec005m/mds/Regresion avanzada - Javier Nogales/advanced_regression")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
View(data)
View(data)
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
summary(data)
colSums(is.na(data))
ampute <- function(df, index, state, date){
new.df <- df %>%
filter(Province_State == state, month(Date) == month(date), year(Date) == year(date))
value <- mean(new.df[,index], na.rm = TRUE)
return(value)
}
data$Recovered[is.na(data$Recovered)] =
ampute(data, 8, data$Province_State, data$Date)
data$People_Hospitalized[is.na(data$People_Hospitalized)] =
ampute(data, 13, data$Province_State, data$Date)
data$Hospitalization_Rate[is.na(data$Hospitalization_Rate)] =
ampute(data, 18, data$Province_State, data$Date)
colSums(is.na(data))
data.df <- data %>%
filter(data$Date >= "2020-07-01")
covid.data <- data %>%
filter(data$Date >= "2020-07-01")
View(data.df)
View(covid.data)
plot_num(covid.data)
numeric_cols = sapply(covid.data, is.numeric)
boxplot(scale(covid.data[, numeric_cols]), las=2, col='darkblue')
covid.data %>%
ggplot(aes(x=Confirmed, y=Deaths)) +
geom_point()
covid.data %>%
ggplot(aes(x=Date, y=Confirmed)) +
geom_line(color='#00AFBB', size = 2)
%>%
covid.data %>%
ggplot(aes(x=Date, y=Deaths)) +
geom_line(color='#00AFBB', size = 1)
library(corrplot)
ggcorr(covid.data[,numeric_cols], label = T)
covid.data %>%
ggplot(aes(x=Case_Fatality_Ratio, y=Deaths)) +
geom_point()
barplot(data.df$Case_Fatality_Ratio, col="darkblue")
View(data)
View(data)
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
data %>%
arrange(asc(Date))
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
data %>%
arrange(Date)
summary(data)
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
data <- data %>%
arrange(Date)
summary(data)
View(data)
View(data)
colSums(is.na(data))
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data$Last_Update <- as.Date(data$Last_Update)
data <- read.csv(file = 'data/covid_data_us.csv')
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
data <- data %>%
arrange(Date)
summary(data)
View(data)
View(data)
data <- read.csv(file = 'data/covid_data_us.csv')
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
summary(data)
colSums(is.na(data))
ampute <- function(df, index, state, date){
new.df <- df %>%
filter(Province_State == state, month(Date) == month(date), year(Date) == year(date))
value <- mean(new.df[,index], na.rm = TRUE)
return(value)
}
data$Recovered[is.na(data$Recovered)] =
ampute(data, 8, data$Province_State, data$Date)
data$People_Hospitalized[is.na(data$People_Hospitalized)] =
ampute(data, 13, data$Province_State, data$Date)
data$Hospitalization_Rate[is.na(data$Hospitalization_Rate)] =
ampute(data, 18, data$Province_State, data$Date)
colSums(is.na(data))
covid.data <- data %>%
filter(data$Date >= "2020-07-01") %>%
arrange(Date)
View(covid.data)
View(covid.data)
plot_num(covid.data)
numeric_cols = sapply(covid.data, is.numeric)
boxplot(scale(covid.data[, numeric_cols]), las=2, col='darkblue')
covid.data %>%
ggplot(aes(x=Confirmed, y=Deaths)) +
geom_point()
covid.data %>%
ggplot(aes(x=Date, y=Confirmed)) +
geom_line(color='#00AFBB', size = 2)
covid.data %>%
ggplot(aes(x=Date, y=Deaths)) +
geom_line(color='#00AFBB', size = 1)
library(corrplot)
ggcorr(covid.data[,numeric_cols], label = T)
set.seed(42)
#covid.data <- data %>%
#  select(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, Testing_Rate)
trainIndex <- createTimeSlices(c, p = .7,
list = FALSE,
times = 1)
set.seed(42)
#covid.data <- data %>%
#  select(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, Testing_Rate)
trainIndex <- createDataPartition(c, p = .7,
list = FALSE,
times = 1)
set.seed(42)
#covid.data <- data %>%
#  select(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, Testing_Rate)
trainIndex <- createDataPartition(c(covid.data$Deaths, covid.data$Province_State), p = .7,
list = FALSE,
times = 1)
training <- covid.data[ trainIndex,]
testing <- covid.data[-trainIndex,]
set.seed(42)
#covid.data <- data %>%
#  select(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, Testing_Rate)
trainIndex <- createDataPartition(c(covid.data$Province_State), p = .7,
list = FALSE,
times = 1)
training <- covid.data[ trainIndex,]
testing <- covid.data[-trainIndex,]
fit.lm <- lm(Deaths ~ . - Deaths, data=covid.data)
fit.lm <- lm(Deaths ~ ., data=covid.data)
View(covid.data)
fit.lm <- lm(Deaths ~ . - Country_Region - Last_Update - FIPD - IUD - ISO3, data=covid.data)
fit.lm <- lm(Deaths ~ . - Country_Region - Last_Update - FIPS - IUD - ISO3, data=covid.data)
fit.lm <- lm(Deaths ~ . - Country_Region - Last_Update - FIPS - UID - ISO3, data=covid.data)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
summary(data)
colSums(is.na(data))
ampute <- function(df, index, state, date){
new.df <- df %>%
filter(Province_State == state, month(Date) == month(date), year(Date) == year(date))
value <- mean(new.df[,index], na.rm = TRUE)
return(value)
}
data$Recovered[is.na(data$Recovered)] =
ampute(data, 8, data$Province_State, data$Date)
data$People_Hospitalized[is.na(data$People_Hospitalized)] =
ampute(data, 13, data$Province_State, data$Date)
data$Hospitalization_Rate[is.na(data$Hospitalization_Rate)] =
ampute(data, 18, data$Province_State, data$Date)
colSums(is.na(data))
covid.data <- data %>%
select(Province_State, Lat, Long_,  Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, People_Hospitalized, Case_Fatality_Ratio, Testing_Rate, Hospitalization_Rate, Date) %>%
filter(data$Date >= "2020-07-01") %>%
arrange(Date)
View(covid.data)
View(covid.data)
library(corrplot)
ggcorr(covid.data[,numeric_cols], label = T)
numeric_cols = sapply(covid.data, is.numeric)
boxplot(scale(covid.data[, numeric_cols]), las=2, col='darkblue')
plot_num(covid.data)
covid.data %>%
ggplot(aes(x=Confirmed, y=Deaths)) +
geom_point()
covid.data %>%
ggplot(aes(x=Date, y=Confirmed)) +
geom_line(color='#00AFBB', size = 2)
covid.data %>%
ggplot(aes(x=Date, y=Deaths)) +
geom_line(color='#00AFBB', size = 1)
library(corrplot)
ggcorr(covid.data[,numeric_cols], label = T)
covid.data %>%
ggplot(aes(x=Case_Fatality_Ratio, y=Deaths)) +
geom_point()
barplot(data.df$Case_Fatality_Ratio, col="darkblue")
barplot(covid.data$Case_Fatality_Ratio, col="darkblue")
set.seed(42)
trainIndex <- createDataPartition(c(covid.data$Province_State), p = .7,
list = FALSE,
times = 1)
training <- covid.data[ trainIndex,]
testing <- covid.data[-trainIndex,]
fit.lm <- lm(Deaths ~ ., data=covid.data)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm <- lm(Case_Fatality_Ratio ~ ., data=covid.data)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm <- lm(Case_Fatality_Ratio ~ ., data=training)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm.log <- lm(log(Case_Fatality_Ratio+1) ~ . - Deaths, data=training)
summary(fit.lm.log)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio, family = 'poisson', data=covid.data)
summary(fit.glm)
summary(covid.data)
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
data <- read.csv(file = 'data/covid_data_us.csv')
data$Last_Update <- as.Date(data$Last_Update)
data$Date <- as.Date(data$Date)
summary(data)
colSums(is.na(data))
ampute <- function(df, index, state, date){
new.df <- df %>%
filter(Province_State == state, month(Date) == month(date), year(Date) == year(date))
value <- mean(new.df[,index], na.rm = TRUE)
return(value)
}
data$Recovered[is.na(data$Recovered)] =
ampute(data, 8, data$Province_State, data$Date)
data$People_Hospitalized[is.na(data$People_Hospitalized)] =
ampute(data, 13, data$Province_State, data$Date)
data$Hospitalization_Rate[is.na(data$Hospitalization_Rate)] =
ampute(data, 18, data$Province_State, data$Date)
colSums(is.na(data))
covid.data <- data %>%
select(Province_State, Confirmed, Deaths, Recovered, Active, Incident_Rate, Total_Test_Results, People_Hospitalized, Case_Fatality_Ratio, Testing_Rate, Hospitalization_Rate, Date) %>%
filter(data$Date >= "2020-07-01") %>%
arrange(Date)
plot_num(covid.data)
numeric_cols = sapply(covid.data, is.numeric)
boxplot(scale(covid.data[, numeric_cols]), las=2, col='darkblue')
covid.data %>%
ggplot(aes(x=Confirmed, y=Deaths)) +
geom_point()
covid.data %>%
ggplot(aes(x=Date, y=Confirmed)) +
geom_line(color='#00AFBB', size = 2)
covid.data %>%
ggplot(aes(x=Date, y=Deaths)) +
geom_line(color='#00AFBB', size = 1)
library(corrplot)
ggcorr(covid.data[,numeric_cols], label = T)
barplot(covid.data$Case_Fatality_Ratio, col="darkblue")
set.seed(42)
trainIndex <- createDataPartition(c(covid.data$Province_State), p = .7,
list = FALSE,
times = 1)
training <- covid.data[ trainIndex,]
testing <- covid.data[-trainIndex,]
fit.lm <- lm(Case_Fatality_Ratio ~ ., data=training)
summary(fit.lm)
# The R2 is 47%, reasonable fit
# Diagnosis
par(mfrow=c(2,2))
plot(fit.lm)
fit.lm.log <- lm(log(Case_Fatality_Ratio+1) ~ . - Deaths, data=training)
summary(fit.lm.log)
fit.lm.log <- lm(log(Case_Fatality_Ratio+1) ~ . - Deaths, data=training)
summary(fit.lm.log)
par(mfrow=c(2,2))
plot(fit.lm.log)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio, family = 'poisson', data=covid.data)
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio, family = 'poisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio, family = 'poisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate - Hospitalization_Rate, family = 'poisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate - Hospitalization_Rate - Testing_Rate, family = 'poisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate - Hospitalization_Rate - Testing_Rate -Date, family = 'poisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate - Hospitalization_Rate - Testing_Rate, family = 'poisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm)
fit.glm <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate -
Hospitalization_Rate - Testing_Rate,
family = 'poisson', data=training, offset = log(Confirmed))
summary(fit.glm)
fit.glm.poisson <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate -
Hospitalization_Rate - Testing_Rate,
family = 'poisson', data=training, offset = log(Confirmed))
summary(fit.glm.poisson)
fit.glm.qpoisson <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate -
Hospitalization_Rate - Testing_Rate,
family = 'quasipoisson', data=covid.data, offset = log(Confirmed))
summary(fit.glm.qpoisson)
fit.glm.poisson.all <- glm(Deaths ~ . - Case_Fatality_Ratio,
family = 'poisson', data=training, offset = log(Confirmed))
summary(fit.glm.poisson.all)
exp(cbind(coef(fit.glm.poisson.all), confint(fit.glm.poisson.all)))
fit.glm.poisson <- glm(Deaths ~ . - Case_Fatality_Ratio - Active - Incident_Rate -
Hospitalization_Rate - Testing_Rate,
family = 'poisson', data=training, offset = log(Confirmed))
summary(fit.glm.poisson)
exp(cbind(coef(fit.glm.poisson), confint(fit.glm.poisson)))
plot(effect("STARS", fit.glm.poisson), ci.style="band", rescale.axis=FALSE, multiline=TRUE, xlab="stars", ylab="rate", rug=FALSE, main="")
library(dplyr)
library(tidyverse)
library(lubridate)
library(funModeling)
library(ggplot2)
library(GGally)
library(caret)
library(effects)
plot(effect("STARS", fit.glm.poisson), ci.style="band", rescale.axis=FALSE, multiline=TRUE, xlab="stars", ylab="rate", rug=FALSE, main="")
plot(effect("Deaths", fit.glm.poisson), ci.style="band", rescale.axis=FALSE, multiline=TRUE, xlab="stars", ylab="rate", rug=FALSE, main="")
setwd("C:/Users/tec005m/mds/Regresion avanzada - Javier Nogales/advanced_regression")
source('C:/Users/tec005m/mds/Regresion avanzada - Javier Nogales/Modelos Lineales Generalizados/Casos de Estudio/WineSales_CaseStudy_GLM.R', echo=TRUE)
